/*
 * Copyright (C) 2014 Matteo Martelli matteomartelli3@gmail.com
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package licknet.view;

import com.sun.org.apache.xalan.internal.xsltc.runtime.BasisLibrary;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;

import org.graphstream.ui.graphicGraph.GraphicGraph;
import org.graphstream.ui.swingViewer.View;
import org.graphstream.ui.swingViewer.Viewer;

import licknet.app.LickNetApp;
import licknet.graph.NotesGraph;
import licknet.utils.Log;

/**
 *
 * @author Matteo Martelli matteomartelli3@gmail.com
 */
public class Frame extends javax.swing.JFrame {
	static LickNetApp app = LickNetApp.getInstance();
	
	/**
	 * Creates new form Frame
	 */
	public Frame() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        browseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        graphsList = new javax.swing.JList();
        createGraphsButton = new javax.swing.JButton();
        displayGraph = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        browseButton.setText("Browse...");
        browseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                browseButtonMouseClicked(evt);
            }
        });

        graphsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        graphsList.setToolTipText("");
        jScrollPane1.setViewportView(graphsList);
        graphsList.getAccessibleContext().setAccessibleParent(this);

        createGraphsButton.setText("Create Graphs");
        createGraphsButton.setToolTipText("Create the graphs from the default folder");
        createGraphsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createGraphsButtonMouseClicked(evt);
            }
        });

        displayGraph.setText("Display");
        displayGraph.setToolTipText("");
        displayGraph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayGraphMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(createGraphsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 468, Short.MAX_VALUE)
                        .addComponent(browseButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(displayGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseButton)
                    .addComponent(createGraphsButton))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayGraph)
                .addContainerGap(292, Short.MAX_VALUE))
        );

        browseButton.getAccessibleContext().setAccessibleName("browseButton");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseButtonMouseClicked
        // TODO add your handling code here:
		System.out.println("mouse clicked");
    }//GEN-LAST:event_browseButtonMouseClicked

    private void createGraphsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createGraphsButtonMouseClicked
        
		try {
			app.createGraphs();
		} catch (Exception ex) {
			Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
		}
		
		graphsList.setModel(new javax.swing.AbstractListModel() {
			@Override
            public int getSize() { return app.getNotesGraphs().size(); }
			@Override
            public Object getElementAt(int i) {
					return app.getNotesGraphs().get(i);
			}
        });
    }//GEN-LAST:event_createGraphsButtonMouseClicked

    private void displayGraphMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayGraphMouseClicked
        NotesGraph graph = (NotesGraph)graphsList.getSelectedValue();
        Viewer viewer = graph.display();
        viewer.setCloseFramePolicy(Viewer.CloseFramePolicy.CLOSE_VIEWER);
        graph.findLicks();
        
    }//GEN-LAST:event_displayGraphMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JButton createGraphsButton;
    private javax.swing.JButton displayGraph;
    private javax.swing.JList graphsList;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
